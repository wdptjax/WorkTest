<Window x:Name="window" x:Class="OpenXmlReport.ShowProgress"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:OpenXmlReport"
        mc:Ignorable="d" Width="600" Height="200" MaxHeight="600"
        d:DesignHeight="450" d:DesignWidth="800" 
        WindowStartupLocation="CenterScreen" SizeToContent="Height" ShowInTaskbar="False" Topmost="True" WindowStyle="None"
        AllowsTransparency="True" ResizeMode="NoResize">
    <Window.Resources>
        <DataTemplate x:Key="progressTemplete" DataType="{x:Type local:ReportExportBase}">
            <Grid MinWidth="200" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock Margin="5" Text="{Binding Message}" 
                           Background="Transparent" Foreground="{Binding ForeColor, ElementName=window}" HorizontalAlignment="Left"/>
                <TextBlock x:Name="txtShowFile" Text="{Binding FileName}" Background="Transparent" Foreground="Gray" 
                           HorizontalAlignment="Right" VerticalAlignment="Center"
                           Visibility="Collapsed" Margin="10,5"/>
                <Button x:Name="btnShowOpen" HorizontalAlignment="Right" FontWeight="Bold" Grid.ColumnSpan="3" Margin="5" Content="打开文件" Background="Transparent"
                        Command="{x:Static ApplicationCommands.Open}" CommandParameter="{Binding}" Visibility="Collapsed" Cursor="Hand">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <TextBlock>
                                <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Foreground" Value="Blue" />
                            <Setter Property="BorderThickness" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="#FFFD5454" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <ProgressBar Margin="5" Grid.Row="1" Height="20" Maximum="{Binding MaxValue}" Value="{Binding Progress}"/>
                <Button Margin="5" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"
                        Command="{x:Static ApplicationCommands.Find}" CommandParameter="{Binding}">
                    <Button.ToolTip>打开所在文件夹</Button.ToolTip>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Path x:Name="path1" Stroke="{Binding ForeColor, ElementName=window,FallbackValue=white}" Fill="Transparent"
                                      StrokeThickness="1" Data="M0,1 L0,13 L1,14 L14,14 L15,13 L15,5 L14,4 L9,4 L7,1 L6,0 L1,0 Z"/>
                                <Path x:Name="path2" Stroke="{Binding ForeColor, ElementName=window,FallbackValue=white}" Fill="Transparent"
                                      StrokeThickness="1" Data="M8,2 L12,2 L13,4"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Fill" TargetName="path1" Value="#FF4D9CFB"/>
                                    <Setter Property="Stroke" TargetName="path1" Value="#FF4D9CFB"/>
                                    <Setter Property="Stroke" TargetName="path2" Value="#FF4D9CFB"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="path1" Value="#FF1D84FF"/>
                                    <Setter Property="Stroke" TargetName="path1" Value="#FF1D84FF"/>
                                    <Setter Property="Stroke" TargetName="path2" Value="#FF1D84FF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="btnCancel" Margin="5" Padding="0" Grid.Column="2" Grid.Row="1" Background="Transparent" BorderThickness="0" Visibility="Visible"
                        Command="{x:Static ApplicationCommands.Stop}" CommandParameter="{Binding}" VerticalAlignment="Center">
                    <Button.ToolTip>取消导出</Button.ToolTip>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Path x:Name="path" Stroke="{Binding ForeColor, ElementName=window,FallbackValue=white}" 
                                  StrokeThickness="3" Data="M0,0 L14,14 M14,0 L0,14"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="path" Value="#FFFF9C92" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="path" Value="#FFFF5454" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="btnClear" Margin="5" Padding="0" Grid.Column="2" Grid.Row="1" Background="Transparent" BorderThickness="0" Visibility="Collapsed"
                        Command="{x:Static ApplicationCommands.Delete}" CommandParameter="{Binding}" VerticalAlignment="Center">
                    <Button.ToolTip>清理</Button.ToolTip>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Path x:Name="path1" Stroke="{Binding ForeColor, ElementName=window,FallbackValue=white}" StrokeThickness="1" 
                                      Data="M7,0 L7,4 M0,4 L14,4 M2,7 L12,7 L14,13 L13,14 L1,14 L0,13 Z M6.5,0 L6.5,4 M7.5,0 M7.5,4"/>
                                <Path x:Name="path2" Stroke="{Binding ForeColor, ElementName=window,FallbackValue=white}" StrokeThickness="1" 
                                      Data="M4,10 L2,14"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="path1" Value="#FF4D9CFB" />
                                    <Setter Property="Fill" TargetName="path1" Value="#FF4D9CFB"/>
                                    <Setter Property="Stroke" TargetName="path2" Value="{Binding BackColor, ElementName=window,FallbackValue=white}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="path1" Value="#FF1D84FF" />
                                    <Setter Property="Fill" TargetName="path1" Value="#FF1D84FF"/>
                                    <Setter Property="Stroke" TargetName="path2" Value="{Binding BackColor, ElementName=window,FallbackValue=white}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding ExportCompleted}" Value="true">
                    <Setter Property="Visibility" TargetName="btnShowOpen" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="btnCancel" Value="Collapsed"/>
                    <Setter Property="Visibility" TargetName="btnClear" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="txtShowFile" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ExportCanceled}" Value="true">
                    <Setter Property="Visibility" TargetName="btnShowOpen" Value="Collapsed"/>
                    <Setter Property="Visibility" TargetName="btnCancel" Value="Collapsed"/>
                    <Setter Property="Visibility" TargetName="btnClear" Value="Visible"/>
                </DataTrigger>
                <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter Property="ListBoxItem.Background" Value="#FFDFEBF7"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <LinearGradientBrush Opacity="0.3" StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Color="White" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="0.3"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>-->
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ProgressBarControlTemplate1" TargetType="{x:Type ProgressBar}">
            <Grid x:Name="TemplateRoot" SnapsToDevicePixels="True">
                <Rectangle Fill="{TemplateBinding Background}" Opacity="0.2" RadiusY="0" RadiusX="0"/>
                <Border CornerRadius="0" Margin="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#50FFFFFF" Offset="0.5385"/>
                            <GradientStop Color="Transparent" Offset="0.5385"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border BorderBrush="#80FFFFFF" BorderThickness="1,0,1,1" Margin="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#80FFFFFF" Offset="0.05"/>
                            <GradientStop Color="Transparent" Offset="0.25"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Rectangle x:Name="PART_Track" Margin="1"/>
                <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                    <Grid x:Name="Foreground">
                        <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                        <Grid x:Name="Animation" ClipToBounds="True">
                            <Rectangle x:Name="PART_GlowRect" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="100">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="#60FFFFFF" Offset="0.4"/>
                                        <GradientStop Color="#60FFFFFF" Offset="0.6"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <Grid x:Name="Overlay">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="15"/>
                                <ColumnDefinition Width="0.1*"/>
                                <ColumnDefinition MaxWidth="15"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="LeftDark" Margin="1,1,0,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                        <GradientStop Color="#20000000" Offset="0.3"/>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="RightDark" Grid.Column="2" Margin="0,1,1,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#20000000" Offset="0.7"/>
                                        <GradientStop Color="#0C000000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="LeftLight" Grid.Column="0" Grid.Row="2">
                                <Rectangle.Fill>
                                    <RadialGradientBrush RadiusY="1" RadiusX="1">
                                        <RadialGradientBrush.RelativeTransform>
                                            <MatrixTransform Matrix="1,0,0,1,0.5,0.5"/>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#60FFFFC4" Offset="0"/>
                                        <GradientStop Color="#00FFFFC4" Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="CenterLight" Grid.Column="1" Grid.Row="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#60FFFFC4" Offset="0"/>
                                        <GradientStop Color="#00FFFFC4" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="RightLight" Grid.Column="2" Grid.Row="2">
                                <Rectangle.Fill>
                                    <RadialGradientBrush RadiusY="1" RadiusX="1">
                                        <RadialGradientBrush.RelativeTransform>
                                            <MatrixTransform Matrix="1,0,0,1,-0.5,0.5"/>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#60FFFFC4" Offset="0"/>
                                        <GradientStop Color="#00FFFFC4" Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Border x:Name="Highlight1" Grid.ColumnSpan="3" Grid.RowSpan="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#90FFFFFF" Offset="0.5385"/>
                                        <GradientStop Color="Transparent" Offset="0.5385"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="Highlight2" Grid.ColumnSpan="3" Grid.RowSpan="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#80FFFFFF" Offset="0.05"/>
                                        <GradientStop Color="Transparent" Offset="0.25"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Grid>
                </Decorator>
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                        <Setter.Value>
                            <RotateTransform Angle="-90"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsIndeterminate" Value="True">
                    <Setter Property="Visibility" TargetName="LeftDark" Value="Collapsed"/>
                    <Setter Property="Visibility" TargetName="RightDark" Value="Collapsed"/>
                    <Setter Property="Visibility" TargetName="LeftLight" Value="Collapsed"/>
                    <Setter Property="Visibility" TargetName="CenterLight" Value="Collapsed"/>
                    <Setter Property="Visibility" TargetName="RightLight" Value="Collapsed"/>
                    <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsIndeterminate" Value="False">
                    <Setter Property="Background" TargetName="Animation" Value="#80B5FFA9"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static ApplicationCommands.Open}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static ApplicationCommands.Find}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static ApplicationCommands.Stop}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static ApplicationCommands.Close}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static ApplicationCommands.Delete}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
    </Window.CommandBindings>
    <Grid>
        <Border Background="{Binding TitleBackColor, ElementName=window,FallbackValue=black}" BorderThickness="1" BorderBrush="Gray">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid MouseMove="Grid_MouseMove">
                    <TextBlock Margin="5,0" Text="导出报表" MouseMove="Grid_MouseMove" 
                               Foreground="{Binding TitleForeColor, ElementName=window,FallbackValue=white}" 
                               FontSize="20" VerticalAlignment="Center"/>
                    <Button HorizontalContentAlignment="Center" HorizontalAlignment="Right" VerticalAlignment="Center"
                            Command="{x:Static ApplicationCommands.Close}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="bd" Background="{Binding TitleBackColor, ElementName=window,FallbackValue=black}">
                                    <Path Margin="5" x:Name="path" Stroke="{Binding TitleForeColor, ElementName=window,FallbackValue=white}" 
                                          StrokeThickness="3" Data="M0,0 L20,20 M20,0 L0,20"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Stroke" TargetName="path" Value="#FFFF9C92" />
                                        <Setter Property="Background" TargetName="bd" Value="#FF3392D3" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Stroke" TargetName="path" Value="#FFFF5454" />
                                        <Setter Property="Background" TargetName="bd" Value="#FF3392D3" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
                <ListBox Grid.Row="1" ItemTemplate="{StaticResource progressTemplete}"
                         ItemsSource="{Binding ProgressCollection, ElementName=window}"
                         HorizontalContentAlignment="Stretch" 
                         Background="{Binding BackColor, ElementName=window,FallbackValue=gray}"
                         ItemContainerStyle="{StaticResource ListBoxItemStyle1}"/>
            </Grid>
        </Border>
    </Grid>
</Window>
